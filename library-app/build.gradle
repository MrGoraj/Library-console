buildscript {
    ext {
        springBootVersion = '2.7.7'
    }
    repositories {
        maven {
            url "https://nexus.rbinternational.corp/nexus/repository/public"
        }
        mavenCentral()
        gradlePluginPortal()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-starter:${springBootVersion}")
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath "org.postgresql:postgresql:42.4.2"
        classpath "org.liquibase:liquibase-gradle-plugin:2.1.1"
        classpath "org.yaml:snakeyaml:1.31"
    }
}

apply plugin: 'org.liquibase.gradle'
apply plugin: 'org.springframework.boot'
apply plugin: 'java'
apply plugin: 'io.spring.dependency-management'

group = 'pl.com.rbinternational'
version = '0.0.1-SNAPSHOT'

repositories {
    maven { url "https://nexus.rbinternational.corp/nexus/repository/public" }
    maven { url "https://plugins.gradle.org/m2/" }
    mavenCentral()
    gradlePluginPortal()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa:2.7.7'
    implementation 'org.liquibase:liquibase-core'
    implementation 'org.postgresql:postgresql'
    implementation 'org.yaml:snakeyaml'
    liquibaseRuntime 'org.liquibase:liquibase-core'
    liquibaseRuntime 'org.postgresql:postgresql'
    liquibaseRuntime 'org.yaml:snakeyaml'
    liquibaseRuntime 'info.picocli:picocli:4.7.0'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.9.0'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.9.0'
    implementation project(':library-gui')
}

test {
    useJUnitPlatform()
}

jar {
    manifest {
        attributes(
                'Main-Class': 'pl.com.rbinternational.LibraryApplication'
        )
    }
}

liquibase {
    activities {
        main {
            classPath "library-app/src/main/resources"
            changeLogFile "db/changelog/db.changelog-master.yaml"
            url project.hasProperty("url") ? project.getProperty("url") : "jdbc:postgresql://localhost:5432/postgres"
            username project.hasProperty("username") ? project.getProperty("username") : "admin"
            password project.hasProperty("password") ? project.getProperty("password") : "admin"
        }
    }
}